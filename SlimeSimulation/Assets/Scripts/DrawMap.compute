// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWS
RWTexture2D<float4> TrailMap;
uint width;
uint height;

// Hash function www.cs.ubc.ca/~rbridson/docs/schechter-sca08-turbulence.pdf
uint hash(uint state)
{
    state ^= 2747636419u;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    return state;
}


[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    //Exit if the current vaules are outside of the field of view
    if(id.x < 0 || id.x > width || id.y < 0 || id.y > height) { return; }

    //Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
    int pixelIndex = id.y * width + id.x;
    uint pseudoRandomNumber = hash(pixelIndex);
    Texture[id.xy] = pseudoRandomNumber / 4294967295.0;
}
